// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}
  

model Team{
  TeamId Int @default(autoincrement()) @id

  TeamOrganizers User[] @relation("TeamOrganizers")

  TeamName String @db.Text
  TeamDescription String @db.LongText

  TeamMembers User[] @relation("TeamMembers")


  TeamTickets Ticket[] @relation("TeamTickets")

  PublicPermLevel PermissionLevel @relation(name: "PublicPermLevel", fields: [PublicPermLevelId], references: [PermissionLevelId])
  PublicPermLevelId Int



  @@index([PublicPermLevelId])
}




model PermissionLevel{
  PermissionLevelId Int @default(autoincrement()) @id
  PermissionLevelName String @db.Text
  PermissionLevel Int @db.Int @default(0)

  VisibleTeams Team[] @relation("PublicPermLevel")

  PermissionedUsers User[] @relation("PermissionLevel")
}

model User{
  UserId Int @default(autoincrement()) @id
  UserEmail String  @db.VarChar(600)
  UserPassword String @db.Text

  UserName String @db.MediumText

  CurrentPermissionLevel PermissionLevel? @relation(name: "PermissionLevel", fields: [CurrentPermissionLevelId], references: [PermissionLevelId])
  CurrentPermissionLevelId Int

  UserAuthoredTickets Ticket[] @relation("AuthoredTickets")

  UserAssignedTickets Ticket[] @relation("AssignedTickets")

  UserSession Session[] @relation("UserSession")

  UserTeams Team[] @relation("TeamMembers")
  OrganizedTeams  Team[] @relation("TeamOrganizers")

  @@index([CurrentPermissionLevelId])
}


model TicketType{
  TicketTypeId Int @default(autoincrement()) @id
  TicketTypeName String @db.Text

  TicketsOfType Ticket[] @relation("TicketType")
}


model TicketStatus{
  TicketStatusId Int @default(autoincrement()) @id
  TicketStatusName String @db.Text

  TicketsOfStatus Ticket[] @relation("TicketStatus")
}

model Ticket{

  ticketId Int @default(autoincrement()) @id

  
  AuthorUser User @relation(name: "AuthoredTickets", fields: [AuthorUserId], references: [UserId])
  AuthorUserId Int @unique

  CurrentAssignedUser User? @relation(name: "AssignedTickets", fields: [CurrentAssignedUserId], references: [UserId])
  CurrentAssignedUserId Int @unique

  TicketStatus TicketStatus @relation(name: "TicketStatus", fields: [CurrentTicketStatusId], references: [TicketStatusId])
  CurrentTicketStatusId Int

  TicketType TicketType @relation(name: "TicketType", fields: [CurrentTicketTypeId], references: [TicketTypeId])
  CurrentTicketTypeId Int 

  TicketTitle String @default("ticket title")

  TicketBody String @default("Ticket description")

  TicketCreationTime DateTime @default(now())

  Team Team @relation(name: "TeamTickets", fields: [TicketTeamId], references: [TeamId])
  TicketTeamId Int


  @@index([AuthorUserId])
  @@index([CurrentAssignedUserId])
  @@index([CurrentTicketTypeId])
  @@index([CurrentTicketStatusId])
  @@index([TicketTeamId])
}


model Session{
  sessionId Int @default(autoincrement()) @id

  SessionToken String @default("")

  sessionedUser User @relation(name: "UserSession", fields: [SessionedUserId], references: [UserId])
  SessionedUserId Int @unique

  @@index([SessionedUserId])
}
