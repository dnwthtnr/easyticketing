generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Space {
  SpaceId            Int             @id @default(autoincrement())
  SpaceName          String          @db.Text
  SpaceDescription   String          @db.LongText
  PublicPermLevelId Int
  SpaceOrganizers    User[]          @relation("SpaceOrganizers")
  SpaceMembers       User[]          @relation("SpaceMembers")
  SpaceTickets       Ticket[]        @relation("SpaceTickets")
  PublicPermLevel   PermissionLevel @relation("PublicPermLevel", fields: [PublicPermLevelId], references: [PermissionLevelId])

  @@index([PublicPermLevelId])
}

model PermissionLevel {
  PermissionLevelId   Int    @id @default(autoincrement())
  PermissionLevelName String @db.Text
  PermissionLevel     Int    @default(0)
  VisibleSpaces        Space[] @relation("PublicPermLevel")
  PermissionedUsers   User[] @relation("PermissionLevel")
}

model User {
  UserId                   Int              @id @default(autoincrement())
  UserEmail                String           @db.VarChar(600) @unique
  UserPassword             String           @db.Text 
  UserName                 String           @db.MediumText
  CurrentPermissionLevelId Int
  CurrentPermissionLevel   PermissionLevel? @relation("PermissionLevel", fields: [CurrentPermissionLevelId], references: [PermissionLevelId])
  UserAuthoredTickets      Ticket[]         @relation("AuthoredTickets")
  UserAssignedTickets      Ticket[]         @relation("AssignedTickets")
  UserSession              Session[]        @relation("UserSession")
  UserSpaces                Space[]           @relation("SpaceMembers")
  OrganizedSpaces           Space[]           @relation("SpaceOrganizers")

  @@index([CurrentPermissionLevelId])
}

model TicketType {
  TicketTypeId   Int      @id @default(autoincrement())
  TicketTypeName String   @db.Text
  TicketsOfType  Ticket[] @relation("TicketType")
}

model TicketStatus {
  TicketStatusId   Int      @id @default(autoincrement())
  TicketStatusName String   @db.Text
  TicketsOfStatus  Ticket[] @relation("TicketStatus")
}

model Ticket {
  ticketId              Int          @id @default(autoincrement())
  AuthorUserId          Int          @unique
  CurrentAssignedUserId Int          @unique
  CurrentTicketStatusId Int
  CurrentTicketTypeId   Int
  TicketTitle           String       @default("ticket title")
  TicketBody            String       @default("Ticket description")
  TicketCreationTime    DateTime     @default(now())
  TicketSpaceId          Int
  AuthorUser            User         @relation("AuthoredTickets", fields: [AuthorUserId], references: [UserId])
  CurrentAssignedUser   User?        @relation("AssignedTickets", fields: [CurrentAssignedUserId], references: [UserId])
  TicketStatus          TicketStatus @relation("TicketStatus", fields: [CurrentTicketStatusId], references: [TicketStatusId])
  TicketType            TicketType   @relation("TicketType", fields: [CurrentTicketTypeId], references: [TicketTypeId])
  Space                  Space         @relation("SpaceTickets", fields: [TicketSpaceId], references: [SpaceId])

  @@index([AuthorUserId])
  @@index([CurrentAssignedUserId])
  @@index([CurrentTicketTypeId])
  @@index([CurrentTicketStatusId])
  @@index([TicketSpaceId])
}

model Session {
  sessionId       Int    @id @default(autoincrement())
  SessionToken    String @default("")
  SessionedUserId Int    
  sessionedUser   User   @relation("UserSession", fields: [SessionedUserId], references: [UserId])

  @@index([SessionedUserId])
}

model SpaceMembers {
  A Int
  B Int

  @@unique([A, B], map: "_SpaceMembers_AB_unique")
  @@index([B], map: "_SpaceMembers_B_index")
  @@map("_SpaceMembers")
}

model SpaceOrganizers {
  A Int
  B Int

  @@unique([A, B], map: "_SpaceOrganizers_AB_unique")
  @@index([B], map: "_SpaceOrganizers_B_index")
  @@map("_SpaceOrganizers")
}
